$refs:
  nfs-server: &nfs-server 192.168.0.4
  volumes: &volumes
    - name: config-volume
      nfs:
        server: *nfs-server
        path: /volume1/k8s/volumes/
    - name: downloads-volume
      nfs:
        server: *nfs-server
        path: /volume1/downloads/
    - name: archive-volume
      nfs:
        server: *nfs-server
        path: /volume1/media/
  dockerImages:
    ## https://hub.docker.com/r/linuxserver/bazarr/tags
    bazarr: &bazarr "1.2.2"
    ## https://hub.docker.com/r/linuxserver/overseerr/tags
    overseerr: &overseerr "1.33.0"
    ## https://hub.docker.com/r/linuxserver/prowlarr/tags
    prowlarr: &prowlarr "1.7.1-nightly"
    ## https://hub.docker.com/r/linuxserver/radarr/tags
    radarr: &radarr "4.6.4-nightly"
    ## https://hub.docker.com/r/linuxserver/sonarr/tags
    sonarr: &sonarr "3.0.10"
    ## https://hub.docker.com/r/linuxserver/transmission/tags
    transmission: &transmission "4.0.3"
    ## https://hub.docker.com/r/linuxserver/tautulli/tags
    tautulli: &tautulli "2.12.4"

bazaar:
  deploy:
    containerPorts:
      http: 6767
    image:
      repository: "linuxserver/bazarr"
      tag: *bazarr
      pullPolicy: IfNotPresent
    extraVolumes: *volumes
    extraVolumeMounts:
      - mountPath: /config
        name: config-volume
        subPath: bazarr-config
      - mountPath: /mnt/archive/media
        name: archive-volume
      - mountPath: /mnt/downloads
        name: downloads-volume
  ingress:
    enabled: false
    hostname: "bazarr.k3s.home"
    path: /

overseerr:
  deploy:
    containerPorts:
      http: 5055
    image:
      repository: "lscr.io/linuxserver/overseerr"
      tag: *overseerr
      pullPolicy: IfNotPresent
    extraVolumes: *volumes
    extraVolumeMounts:
      - mountPath: /config
        name: config-volume
        subPath: overseerr-config
      - mountPath: /mnt/archive/media
        name: archive-volume
      - mountPath: /mnt/downloads
        name: downloads-volume
  ingress:
    enabled: false
    hostname: "overseerr.jfms7s-home-porto.myds.me"
    path: /

prowlarr:
  deploy:
    containerPorts:
      http: 9696
    image:
      repository: "linuxserver/prowlarr"
      tag: *prowlarr
      pullPolicy: IfNotPresent
    extraVolumes: *volumes
    extraVolumeMounts:
      - mountPath: /config
        name: config-volume
        subPath: prowlarr-config
      - mountPath: /mnt/archive/media
        name: archive-volume
      - mountPath: /mnt/downloads
        name: downloads-volume
  ingress:
    enabled: false
    hostname: "prowlarr.k3s.home"
    path: /

radarr:
  deploy:
    containerPorts:
      http: 7878
    image:
      repository: "linuxserver/radarr"
      tag: *radarr
      pullPolicy: IfNotPresent
    extraVolumes: *volumes
    extraVolumeMounts:
      - mountPath: /config
        name: config-volume
        subPath: radarr-config
      - mountPath: /mnt/archive/media
        name: archive-volume
      - mountPath: /mnt/downloads
        name: downloads-volume
  ingress:
    enabled: false
    hostname: "radarr.k3s.home"
    path: /

sonarr:
  deploy:
    containerPorts:
      http: 8989
    image:
      repository: "linuxserver/sonarr"
      tag: *sonarr
      pullPolicy: IfNotPresent
    extraVolumes: *volumes
    extraVolumeMounts:
      - mountPath: /config
        name: config-volume
        subPath: sonarr-config
      - mountPath: /mnt/archive/media
        name: archive-volume
      - mountPath: /mnt/downloads
        name: downloads-volume
  ingress:
    enabled: false
    hostname: "sonarr.k3s.home"
    path: /

transmission:
  deploy:
    env:
      - name: TRANSMISSION_WEB_HOME
        value: "/flood-for-transmission/"
    containerPorts:
      http: 9091
      bit-torrent: 51413
      bit-torrent-udp:
        port: 51413
        protocol: UDP
    image:
      repository: "linuxserver/transmission"
      tag: *transmission
      pullPolicy: IfNotPresent
    extraVolumes: *volumes
    extraVolumeMounts:
      - mountPath: /config
        name: config-volume
        subPath: transmission-config
      - mountPath: /mnt/archive/media
        name: archive-volume
      - mountPath: /mnt/downloads
        name: downloads-volume
  ingress:
    enabled: false
    hostname: "transmission.k3s.home"
    path: /

tautulli:
  deploy:
    containerPorts:
      http: 8181
    image:
      repository: "linuxserver/tautulli"
      tag: *tautulli
      pullPolicy: IfNotPresent
    extraVolumes:
      - name: config-volume
        nfs:
          server: *nfs-server
          path: /volume1/k8s/volumes/tautulli-config
      - name: plex-server
        nfs:
          server: *nfs-server
          path: /volume1/PlexMediaServer/
    extraVolumeMounts:
      - mountPath: /config
        name: config-volume
      - mountPath: /plex-server
        name: plex-server
  ingress:
    enabled: false
    hostname: "tautulli.k3s.home"
    path: /
